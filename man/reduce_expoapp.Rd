% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reduce_expoapp.R
\name{reduce_expoapp}
\alias{reduce_expoapp}
\title{Generate ExpoApp_Totals, ExpoApp_min ,and Quality Analysis Report}
\usage{
reduce_expoapp(
  ExpoApp = NULL,
  Time.zone = "Australia/Melbourne",
  output_dir = getwd(),
  save_ExpoApp_totals = FALSE,
  save_ExpoApp_min = FALSE,
  save_html = TRUE,
  open_html = TRUE,
  ...
)
}
\arguments{
\item{ExpoApp}{It is the ExpoApp RData object}

\item{Time.zone}{Character variable with the time zone of the study area (e.g. "Australia/Melbourne").}

\item{output_dir}{The folder where we want to store the 10 seconds and 1 minute simplified ExpoApp datasets and the Quality Analysis Report.}

\item{save_ExpoApp_totals}{A logical variable (TRUE/FALSE) indicating if we want to save the 10 seconds simplified ExpoApp dataset.}

\item{save_ExpoApp_min}{A logical variable (TRUE/FALSE) indicating if we want to save the 1 minute simplified ExpoApp dataset.}

\item{save_html}{A logical variable (TRUE/FALSE) indicating if we want to save the Quality Analysis Report.}

\item{open_html}{A logical variable (TRUE/FALSE) indicating if we want to open the Quality Analysis Report in the browser.}

\item{...}{optional arguments of function.}
}
\value{
value
}
\description{
It is the function to generate a 10 seconds and 1 minute simplified ExpoApp data.
}
\examples{
# ExpoApp geolocation information is encrypted to ensure the confidentiality of participants
# in case they lose the pheno. Using your password and the below link, you can 
# download SensorLab2-1.2.2 tool. It contains a jar file, a decrypt key and example datasets.
# Please, download, unzip and save SensorLab2-1.2.2 into your desired path.

browseURL("https://cloudstor.aarnet.edu.au/plus/s/5kPnaEyzuRB4cpH")
Lab_folder <-"C:/Users/ddonaire/Documents/SensorLab2-1.2.2"
load(file.path(Lab_folder,"ExpoApp.IDddg.RData"))
ls()
result <- reduce_expoapp(ExpoApp=expoapp,output_dir=getwd(), Time.zone = "Australia/Melbourne",
                         save_ExpoApp_totals = TRUE, save_ExpoApp_min = FALSE, save_html = TRUE, 
                         open_html = TRUE)

# If you have imported Expoapp Data using import_expoapp and you are in the same sesion, you don't need to load the data.
sapply(expoapp,head)
result <- reduce_expoapp(ExpoApp=expoapp,output_dir=getwd(), Time.zone = "Australia/Melbourne",
                         save_ExpoApp_totals = TRUE, save_ExpoApp_min = FALSE, save_html = TRUE, 
                         open_html = TRUE)
result
gps <- result[!is.na(latitude),]
gps_sf <- sf::st_as_sf(gps,coords=c("longitude","latitude"),crs=4326)
mapview::mapview(gps_sf,zcol="mets",layer.name="METs")
}
